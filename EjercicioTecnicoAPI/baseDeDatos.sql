-- CREAR BASE DE DATOS
CREATE DATABASE EJTECNICOBD;
-- BORRAR BASE DE DATOS
DROP DATABASE EJTECNICOBD;
-- USAR LA BASE DE DATOS
USE EJTECNICOBD;
-- CREACION DE TABLAS
CREATE TABLE DEPARTAMENTOS(
	DEPARTAMENTOID INT(1) NOT NULL PRIMARY KEY,
    DEPARTAMENTONAME VARCHAR(30) NOT NULL
);
CREATE TABLE CLASES(
	CLASEID INT(2) NOT NULL PRIMARY KEY,
    CLASENAME VARCHAR(30) NOT NULL,
    DEPARTAMENTOID INT(1) NOT NULL,
    FOREIGN KEY (DEPARTAMENTOID) REFERENCES DEPARTAMENTOS(DEPARTAMENTOID)
);
CREATE TABLE FAMILIAS(
	FAMILIAID INT(3) NOT NULL PRIMARY KEY,
    FAMILIANAME VARCHAR(30) NOT NULL,
    CLASEID INT(2) NOT NULL,
    FOREIGN KEY (CLASEID) REFERENCES CLASES(CLASEID)
);
CREATE TABLE ARTICULOS(
	SKU INT(6) NOT NULL PRIMARY KEY,
    ARTICULO VARCHAR(15) NOT NULL,
    MARCA VARCHAR(15) NOT NULL,
    MODELO VARCHAR(20) NOT NULL,
    DEPARTAMENTO INT(1) NOT NULL,
    CLASE INT(2) NOT NULL,
    FAMILIA INT(3) NOT NULL,
    FECHAALTA DATE NOT NULL,
    STOCK INT(9) NOT NULL,
    CANTIDAD INT(9) NOT NULL,
	DESCONTINUADO INT(1) NOT NULL,
    FECHABAJA DATE NOT NULL,
    FOREIGN KEY (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(DEPARTAMENTOID),
    FOREIGN KEY (CLASE) REFERENCES CLASES(CLASEID),
    FOREIGN KEY (FAMILIA) REFERENCES FAMILIAS(FAMILIAID)
);


-- PROCEDIMIENTO ALMACENADO PARA INSERTAR O ACTUALIZAR UN REGISTRO EN LA TABLA ARTICULOS
DELIMITER //
CREATE PROCEDURE INSERT_UPDATE_ARTICULOS(
	p_SKU INT, p_ARTICULO VARCHAR(15), p_MARCA VARCHAR(15), p_MODELO VARCHAR(20), p_DEPARTAMENTO INT,
    p_CLASE INT, p_FAMILIA INT, p_FECHAALTA DATE, p_STOCK INT, p_CANTIDAD INT, p_DESCONTINUADO INT, p_FECHABAJA DATE)
BEGIN
    DECLARE row_count INT;
    
    SELECT COUNT(*) INTO row_count FROM ARTICULOS WHERE SKU = p_SKU;
    
    IF row_count > 0 THEN
        -- ACTUALIZAR UN REGISTRO EXISTENTE
        UPDATE ARTICULOS
        SET ARTICULO = p_ARTICULO, MARCA = p_MARCA, MODELO = p_MODELO, DEPARTAMENTO = p_DEPARTAMENTO,CLASE = p_CLASE, FAMILIA = p_FAMILIA,
            FECHAALTA = p_FECHAALTA, STOCK = p_STOCK, CANTIDAD = p_CANTIDAD, DESCONTINUADO = p_DESCONTINUADO, FECHABAJA = p_FECHABAJA
        WHERE SKU = p_SKU;
        IF ROW_COUNT() = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Error al actualizar la tabla Articulos';
        END IF;
    ELSE
        -- INSERTAR NUEVO REGISTRO
        INSERT INTO ARTICULOS (SKU,ARTICULO,MARCA,MODELO,DEPARTAMENTO,CLASE,FAMILIA,FECHAALTA,STOCK,CANTIDAD,DESCONTINUADO,FECHABAJA)
        VALUES (p_SKU,p_ARTICULO,p_MARCA,p_MODELO,p_DEPARTAMENTO,p_CLASE,p_FAMILIA,p_FECHAALTA,p_STOCK,p_CANTIDAD,p_DESCONTINUADO,p_FECHABAJA);
        
        IF p_SKU IS NULL OR p_SKU = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Error al insertar en la tabla Articulos';
        END IF;

    END IF;
END
//

-- PROCEDIMIENTO ALMACENADO PARA ELIMINAR UN REGISTRO EN LA TABLA ARTICULOS
DELIMITER //
CREATE PROCEDURE DELETE_ARTICULO(IN p_SKU INT)
BEGIN
    DELETE FROM ARTICULOS WHERE SKU = p_SKU;
END //

-- PROCEDIMIENTO ALMACENADO PARA CONSULTAR UN REGISTRO EN LA TABLA ARTICULOS
DELIMITER //
CREATE PROCEDURE SELECT_ARTICULO(IN p_SKU INT)
BEGIN
    SELECT a.SKU, a.ARTICULO, a.MARCA, a.MODELO, d.DEPARTAMENTOID, d.DEPARTAMENTONAME, c.CLASEID, c.CLASENAME, f.FAMILIAID, f.FAMILIANAME, a.FECHAALTA, a.STOCK, a.CANTIDAD, a.DESCONTINUADO, a.FECHABAJA
	FROM ARTICULOS a
	INNER JOIN DEPARTAMENTOS d ON a.DEPARTAMENTO = d.DEPARTAMENTOID
	INNER JOIN CLASES c ON a.CLASE = c.CLASEID
	INNER JOIN FAMILIAS f ON a.FAMILIA = f.FAMILIAID
    WHERE a.SKU = p_SKU;
END //

-- EJECUTAR PROCEDIMIENTOS
CALL INSERT_UPDATE_ARTICULOS(111114, 'AAAAAAAAAAAAABC', 'AAAAAAAAAAAAAAA', 'AAAAAAAAAAAAAAAAAAAA', 1, 11, 111, '1900-01-01', 999999999, 111111111, 0, '1900-01-01');
CALL DELETE_ARTICULO(111114);
CALL SELECT_ARTICULO(111112);

-- BORRAR PROCEDIMIENTOS
DROP PROCEDURE INSERT_UPDATE_ARTICULOS;
DROP PROCEDURE DELETE_ARTICULO;
DROP PROCEDURE SELECT_ARTICULO

-- ANTES DE EJECUTAR O LLAMAR EL PROCEDIMIENTO INSERTAMOS LOS 
INSERT INTO DEPARTAMENTOS(DEPARTAMENTOID, DEPARTAMENTONAME)
VALUES(1,'DOMESTICOS'),(2,'ELECTRONICA'),(3,'MUEBLE SUELTO'),(4,'SALAS, RECAMARAS, COMEDORES');

INSERT INTO CLASES(CLASEID, CLASENAME, DEPARTAMENTOID)
VALUES(11,'COMESTIBLES',1),(12,'LICUADORAS',1),(13,'BATIDORAS',1),(14,'CAFETERAS',1),
		(21,'AMPLIFICADORES CAR AUDIO',2),(22,'AUTO STEREOS',2),
        (31,'COLCHON',3),(32,'JUEGO BOX',3),
        (41,'SALAS',4),(42,'COMPLEMENTOS PARA SALA',4),(43,'SOFAS CAMA',4);
        
INSERT INTO FAMILIAS(FAMILIAID, FAMILIANAME, CLASEID)
VALUES(111,'SIN NOMBRE',11),(121,'LICUADORAS',12),(122,'EXCLUSIVO COPPEL.COM',12),(131,'BATIDORA MANUAL',13),(132,'PROCESADOR',13),(133,'PICADORA',13),(134,'BATIDORA PEDESTAL',13),(135,'BATIDORA FUENTE DE S',13),(136,'MULTIPRACTICOS',13),(137,'EXCLUSIVOS COPPEL.COM',13),(141,'CAFETERAS',14),(142,'PERCOLADORAS',14),
		(211,'AMPLIFICADOR/RECEPTOR',21),(212,'KIT DE INSTALACION',21),(213,'AMPLIFICADORES COPPEL',21),(221,'AUTOESTEREO CD',22),(222,'ACCESORIOS CAR AUDIO',22),(223,'AMPLIFICADOR',22),(224,'ALARMA AUTO/CASA/OFICINA',22),(225,'SIN MECANISMO',22),(226,'CON CD',22),(227,'MULTIMEDIA',22),(228,'PAQUETE SIN MECANISMO',22),(229,'PAQUETE CON CD',22),
        (311,'PILLOW TOP KS',31),(312,'PILLOW TOP DOBLE KS',31),(313,'HULE ESPUMA KS',31),(321,'ESTANDAR INDIVIDUAL',32),(322,'PILLOW TOP INDIVIDUAL',32),(323,'PILLOW TOP DOBLE IND',32),
        (411,'ESQUINERAS SUPERIOR',41),(412,'TIPO L SECCIONAL',41),(421,'SILLON OCASIONAL',42),(422,'PUFF',42),(423,'BAUL',42),(424,'TABURETE',42),(431,'SOFA CAMA TAPIZADO',43),(432,'SOFA CAMA CLASICO',43),(433,'ESTUDIO',43);
        
INSERT INTO ARTICULOS(SKU, ARTICULO, MARCA, MODELO, DEPARTAMENTO, CLASE, FAMILIA, FECHAALTA, STOCK, CANTIDAD, DESCONTINUADO, FECHABAJA)
VALUES (111111,'AAAAAAAAAAAAAAA','AAAAAAAAAAAAAAA','AAAAAAAAAAAAAAAAAAAA',1,11,111,'1900-01-01',999999999,111111111,0,'1900-01-01');

-- CONSULTAS PARA CORROBORAR QUE LAS TABLAS TENGAN REGISTROS
SELECT * FROM ARTICULOS;
SELECT * FROM DEPARTAMENTOS;
SELECT * FROM CLASES;
SELECT * FROM FAMILIAS;

SELECT a.SKU, a.ARTICULO, a.MARCA, a.MODELO, d.DEPARTAMENTOID, d.DEPARTAMENTONAME, c.CLASEID, c.CLASENAME, f.FAMILIAID, f.FAMILIANAME, a.FECHAALTA, a.STOCK, a.CANTIDAD, a.DESCONTINUADO, a.FECHABAJA
FROM ARTICULOS a
INNER JOIN DEPARTAMENTOS d ON a.DEPARTAMENTO = d.DEPARTAMENTOID
INNER JOIN CLASES c ON a.CLASE = c.CLASEID
INNER JOIN FAMILIAS f ON a.FAMILIA = f.FAMILIAID;
